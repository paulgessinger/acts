name: Builds

on:
  push:
  pull_request:
    branches:
      - master
      - 'release/**'

env:
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  ubuntu2004:
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/acts/machines/ubuntu2004:v3
    steps:
      - uses: actions/checkout@v2
      - name: Configure
        run: >
          cmake -B build -S .
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DACTS_BUILD_EVERYTHING=on
      - name: Build
        run: cmake --build build --
      - name: Unit tests
        run: cmake --build build -- test
      - name: Integration tests
        run: cmake --build build -- integrationtests
  macos:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          path: src
      - name: Install dependencies
        run: >
          brew install cmake eigen ninja
          && sudo mkdir /usr/local/acts
          && sudo chown $USER /usr/local/acts
          && curl -SL https://acts.web.cern.ch/ACTS/ci/macOS/deps.43e0201.tar.gz | tar -xzC /usr/local/acts
      - name: Configure
        run: >
          cmake -B build -S src
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_PREFIX_PATH=/usr/local/acts
          -DACTS_BUILD_EVERYTHING=on
      - name: Build
        run: cmake --build build  --
      - name: Unit tests
        run: cmake --build build -- test
      - name: Integration tests
        run: cmake --build build -- integrationtests
  lcg:
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/acts/machines/${{ matrix.os }}-lcg${{ matrix.lcg }}:v3
    strategy:
      matrix:
        os:
          - centos7
        lcg:
          - 95apython3
          - 96
    env:
      SETUP: /opt/lcg_view/setup.sh
    steps:
      - uses: actions/checkout@v1
      - name: Configure
        run: >
          source ${SETUP}
          && mkdir build
          && cd build
          && cmake ..
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DACTS_BUILD_EVERYTHING=on
      - name: Build
        run: source ${SETUP} && cmake --build build --
      - name: Unit tests
        run: source ${SETUP} && cmake --build build -- test
      - name: Integration tests
        run: source ${SETUP} && cmake --build build -- integrationtests
  docs:
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/acts/machines/ubuntu2004:v3
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: >
          apt-get install -y doxygen
          && pip3 install -r docs/requirements.txt
      - name: Configure
        run: cmake -B build -S . -GNinja -DACTS_BUILD_DOCS=on
      - name: Build
        run: cmake --build build -- docs-with-api
      - uses: actions/upload-artifact@v2
        with:
          name: acts-docs
          path: docs/_build/html/
  downstream:
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/acts/machines/ubuntu2004:v3
    steps:
      - uses: actions/checkout@v2
      - name: Configure Acts
        run: >
          cmake -B build-acts -S .
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/install-acts
          -DACTS_BUILD_JSON_PLUGIN=on
          -DACTS_BUILD_FATRAS=on
      - name: Build Acts
        run: cmake --build build-acts --
      - name: Install Acts
        run: cmake --build build-acts -- install
      - name: Configure Downstream
        run: >
          cmake -B build-downstream -S Tests/DownstreamProject
          -GNinja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_CXX_FLAGS=-Werror
          -DCMAKE_PREFIX_PATH=${{ github.workspace }}/install-acts
      - name: Build Downstream
        run: cmake --build build-downstream --
      - name: Run Downstream
        run: ./build-downstream/bin/ShowActsVersion
