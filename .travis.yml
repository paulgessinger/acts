language: generic
os: linux

# stages:
  # - build

before_install:

before_script:
  - docker run -ti --name CI_container -v "${PWD}:/src:rw" -d gitlab-registry.cern.ch/acts/machines/ubuntu1910 /bin/bash

script:
  - >
    docker exec -ti CI_container /bin/bash -c "
    mkdir build && cd build
    && cmake ..
    -DCMAKE_BUILD_TYPE=Debug
    -DCMAKE_CXX_STANDARD=17
    -DACTS_BUILD_UNITTESTS=ON
    -DCMAKE_CXX_FLAGS="-Werror -fdiagnostics-color=always"
    -DACTS_BUILD_DIGITIZATION_PLUGIN=on
    -DACTS_BUILD_IDENTIFICATION_PLUGIN=on
    -DACTS_BUILD_JSON_PLUGIN=on
    -DACTS_BUILD_BENCHMARKS=on
    -DACTS_BUILD_FATRAS=on
    -DACTS_BUILD_EXAMPLES=on
    -DACTS_BUILD_UNITTESTS=on
    -DACTS_BUILD_LEGACY=on
    -DACTS_BUILD_DD4HEP_PLUGIN=on
    -DACTS_BUILD_TGEO_PLUGIN=on
    -DACTS_BUILD_INTEGRATIONTESTS=off
    && cmake --build . -- -j$(nproc)
    && cmake --build . -- test
    && pip3 install gcovr
    && /usr/bin/python3 ../CI/test_coverage
    "

services:
  - docker

# jobs:
  # include:
    # - env: OS=cc7 LCG=95
      # stage: build
      # cache:
        # <<: *ccache

    # - env: OS=slc6 LCG=94 BUILD_TYPE=Debug
      # stage: build
      # after_script:
        # - echo "Collecting coverage"
        # #- cd build
        # #- env -i bash ../CI/coverage_environment.sh "../CI/test_coverage --gcov $(which gcov)"
        # - docker exec -ti CI_container /bin/bash -c 'cd build && /bin/bash ../CI/coverage_environment.sh "../CI/test_coverage --gcov /cvmfs/sft.cern.ch/lcg/releases/gcc/8.2.0-3fa06/x86_64-slc6/bin/gcov"'
      # cache:
        # directories:
        # - build

    # - env: OS=slc6 LCG=95
      # stage: build
      # cache:
        # <<: *ccache




notifications:
  email:
    on_success: never
    on_failure: never
